name: build

on:
  push:
    branches: [ main ]
    tags: [ v* ]
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
  pull_request:
    branches:
      - main
      - dotnet-vnext
      - dotnet-nightly
  workflow_dispatch:

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_GENERATE_ASPNET_CERTIFICATE: false
  DOTNET_MULTILEVEL_LOOKUP: 0
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_SYSTEM_CONSOLE_ALLOW_ANSI_COLOR_REDIRECTION: 1
  FORCE_COLOR: 1
  MACOS_APP_NAME: AppleFitnessWorkoutMapper.app
  MACOS_APP_PATH: ./artifacts/AppleFitnessWorkoutMapper.app
  MACOS_ARTIFACTS_PATH: ./artifacts
  NUGET_XMLDOC_MODE: skip
  TERM: xterm

permissions:
  contents: read

jobs:
  build:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            codecov_os: macos
          - os: ubuntu-latest
            codecov_os: linux
          - os: windows-latest
            codecov_os: windows

    steps:

    - name: Checkout code
      uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@3447fd6a9f9e57506b15f895c5b76d3b197dc7c2 # v3.2.0

    - name: Build, test and publish
      shell: pwsh
      run: ./build.ps1
      env:
        GoogleMapsApiKey: ${{ secrets.GOOGLE_MAPS_API_KEY }}

    - uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3.1.4
      name: Upload coverage to Codecov
      with:
        files: ./artifacts/coverage/coverage.cobertura.xml,./src/AppleFitnessWorkoutMapper/coverage/lcov.info
        flags: ${{ matrix.codecov_os }}

    - name: Publish ZIP artifacts
      uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
      if: runner.os == 'Linux'
      with:
        name: app-zips
        path: ./artifacts/publish/*.zip

    - name: Publish macOS artifacts
      uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
      if: runner.os == 'Linux'
      with:
        name: app-macos
        path: ./artifacts/publish/osx-x64
        if-no-files-found: error

    - name: Publish screenshots
      uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
      if: ${{ !cancelled() }}
      with:
        name: screenshots
        path: ./artifacts/screenshots/*.png
        if-no-files-found: ignore

    - name: Publish traces
      uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
      if: ${{ !cancelled() }}
      with:
        name: traces
        path: ./artifacts/traces/*
        if-no-files-found: ignore

    - name: Publish videos
      uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
      if: ${{ !cancelled() }}
      with:
        name: videos
        path: ./artifacts/videos/*
        if-no-files-found: ignore

  notarize:
    if: startsWith(github.ref, 'refs/tags/v')
    name: notarize
    needs: build
    runs-on: macos-latest

    steps:

    - name: Checkout code
      uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0

    - name: Download artifacts
      uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
      with:
        name: app-macos
        path: ${{ env.MACOS_ARTIFACTS_PATH }}/publish

    - name: Generate macOS app
      shell: pwsh
      run: |
        $Artifacts = "${{ env.MACOS_ARTIFACTS_PATH }}"
        $AppPath = "${{ env.MACOS_APP_PATH }}"
        $ContentsPath = (Join-Path ${AppPath} "Contents")
        $PublishPath = (Join-Path ${Artifacts} "publish")
        New-Item -Path ${Artifacts} -Name ${env:MACOS_APP_NAME} -ItemType "Directory" | Out-Null
        New-Item -Path ${AppPath} -Name "Contents" -ItemType "Directory" | Out-Null
        New-Item -Path ${ContentsPath} -Name "Resources" -ItemType "Directory" | Out-Null
        Copy-Item -Path ${PublishPath} -Destination (Join-Path ${ContentsPath} "MacOS") -Recurse | Out-Null
        Copy-Item -Path ./src/AppleFitnessWorkoutMapper/Info.plist -Destination ${ContentsPath} | Out-Null

    - name: Configure Xcode
      uses: martincostello/xcode-select@db3d404e6e20374a638c10a68e3d804977ec19cb # node20
      with:
        version: "13.1"

    - name: Import Distribution Certificate
      uses: martincostello/import-signing-certificate@a80a8cdd27ba2b00e0e80480fb66c4149de04061 # node20
      with:
        certificate-data: ${{ secrets.DISTRIBUTION_CERTIFICATE_DATA }}
        certificate-passphrase: ${{ secrets.DISTRIBUTION_CERTIFICATE_PASSPHRASE }}
        keychain-name: ''
        keychain-password: ${{ secrets.KEYCHAIN_PASSWORD }}

    - name: Sign app
      shell: bash
      env:
        APP_PATH: ${{ env.MACOS_APP_PATH }}
        ENTITLEMENTS: ./src/AppleFitnessWorkoutMapper/AppleFitnessWorkoutMapper.entitlements
        SIGNING_IDENTITY: ${{ secrets.SIGNING_IDENTITY }}
      run: |
        chmod +x "${APP_PATH}/Contents/MacOS/AppleFitnessWorkoutMapper"
        find "${APP_PATH}/Contents/MacOS/" | while read -r fname; do
            if [[ -f "${fname}" ]]; then
                echo "Signing ${fname}"
                codesign --force --timestamp --options=runtime --entitlements "${ENTITLEMENTS}" --sign "${SIGNING_IDENTITY}" "${fname}" || true
            fi
        done
        echo "Signing app file"
        codesign --force --timestamp --options=runtime --entitlements "${ENTITLEMENTS}" --sign "${SIGNING_IDENTITY}" "${APP_PATH}"

    - name: Notarize app
      uses: martincostello/xcode-notarize@17e84070b7b624f134b74a6e4afa3284db1040d1 # node20
      with:
        primary-bundle-id: com.martincostello.applefitnessworkoutmapper
        product-path: ${{ env.MACOS_APP_PATH }}
        appstore-connect-username: ${{ secrets.NOTARIZATION_USERNAME }}
        appstore-connect-password: ${{ secrets.NOTARIZATION_PASSWORD }}

    - name: Staple app
      uses: martincostello/xcode-staple@6961e581904dea5b988186057568c92667fb03a1 # node20
      with:
        product-path: ${{ env.MACOS_APP_PATH }}

    - name: Package signed app
      run: ditto -V -c -k --keepParent "${MACOS_APP_PATH}" ./artifacts/AppleFitnessWorkoutMapper-osx-x64.zip

    - name: Publish signed app
      uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
      with:
        name: app-macos-signed
        path: ./artifacts/AppleFitnessWorkoutMapper-osx-x64.zip

    - name: Update macOS ZIP artifact
      uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
      with:
        name: app-zips
        path: ./artifacts/AppleFitnessWorkoutMapper-osx-x64.zip

  release:
    name: release
    needs: notarize
    runs-on: windows-latest

    permissions:
      contents: write

    steps:

    - name: Download artifacts
      uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
      with:
        name: app-zips

    - name: Create GitHub release
      uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844 # v1
      with:
        draft: true
        files: '*.zip'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
