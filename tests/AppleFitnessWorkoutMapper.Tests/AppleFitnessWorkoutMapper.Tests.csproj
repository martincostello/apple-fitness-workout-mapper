<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <IsPackable>false</IsPackable>
    <NoWarn>$(NoWarn);CA1707;CA2234</NoWarn>
    <RootNamespace>MartinCostello.AppleFitnessWorkoutMapper</RootNamespace>
    <TargetFramework>net5.0</TargetFramework>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="coverlet.msbuild" PrivateAssets="All" />
    <PackageReference Include="MartinCostello.Logging.XUnit" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.Testing" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" />
    <PackageReference Include="Moq" />
    <PackageReference Include="ReportGenerator" PrivateAssets="All" />
    <PackageReference Include="Selenium.Support" />
    <PackageReference Include="Selenium.WebDriver" />
    <PackageReference Include="Shouldly" />
    <PackageReference Include="xunit" />
    <PackageReference Include="xunit.runner.visualstudio" PrivateAssets="all" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\src\AppleFitnessWorkoutMapper\AppleFitnessWorkoutMapper.csproj" />
    <WebApplicationFactoryContentRootAttribute
      Include="AppleFitnessWorkoutMapper"
      AssemblyName="AppleFitnessWorkoutMapper"
      ContentRootPath="$([System.IO.Path]::GetFullPath('$(MSBuildThisFileDirectory)../../src/AppleFitnessWorkoutMapper'))"
      ContentRootTest="AppleFitnessWorkoutMapper.csproj"
      Priority="-1" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="xunit.runner.json" CopyToOutputDirectory="PreserveNewest" />
    <None Update="App_Data\*.gpx;localhost-dev.pfx" CopyToOutputDirectory="PreserveNewest" />
  </ItemGroup>
  <PropertyGroup>
    <CollectCoverage>true</CollectCoverage>
    <CoverletOutput Condition=" '$(OutputPath)' != '' ">$(OutputPath)/</CoverletOutput>
    <CoverletOutputFormat>cobertura,json</CoverletOutputFormat>
    <Exclude>[xunit.*]*</Exclude>
    <ExcludeByAttribute>System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute</ExcludeByAttribute>
    <Threshold>70</Threshold>
  </PropertyGroup>
  <!--
    Automatically adds a package reference for Selenium.WebDriver.ChromeDriver.
  -->
  <Target Name="AddReferenceToSeleniumWebDriverChromeDriver" BeforeTargets="CollectPackageReferences" Condition="@(PackageReference-&gt;AnyHaveMetadataValue(`Identity`, `Selenium.WebDriver`))">
    <Message Text="Adding package reference for Selenium.WebDriver.ChromeDriver..." Importance="normal" />
    <!--
      Search for Google Chrome in the well-known installation locations on Windows.
    -->
    <Message Text="Searching for an installation of Google Chrome..." Importance="normal" />
    <ItemGroup Condition="$([MSBuild]::IsOsPlatform(`Windows`))">
      <_ChromeVersions Include="$(ProgramFiles)\Google\Chrome\Application\**\*.manifest" />
      <_ChromeVersions Include="$(MSBuildProgramFiles32)\Google\Chrome\Application\**\*.manifest" />
    </ItemGroup>
    <PropertyGroup Condition="$([MSBuild]::IsOsPlatform(`Windows`))">
      <_ChromeVersion>%(_ChromeVersions.Filename)</_ChromeVersion>
    </PropertyGroup>
    <!-- On Linux query the well-known binary for the version -->
    <Exec Condition="$([MSBuild]::IsOsPlatform(`Linux`))" ConsoleToMSBuild="true" Command="google-chrome --product-version" IgnoreExitCode="true" StandardOutputImportance="low">
      <Output TaskParameter="ConsoleOutput" PropertyName="_ChromeVersion" />
    </Exec>
    <!-- On macOS query the well-known binary for the version -->
    <Exec Condition="$([MSBuild]::IsOsPlatform(`OSX`))" ConsoleToMSBuild="true" Command="'/Applications/Google Chrome.app/Contents/MacOS/Google Chrome' --version" IgnoreExitCode="true" StandardOutputImportance="low">
      <Output TaskParameter="ConsoleOutput" PropertyName="_ChromeVersion" />
    </Exec>
    <!--
      Validate that the installed version of Google Chrome was found.
    -->
    <Error Condition=" '$(_ChromeVersion)' == '' " Text="Google Chrome is not installed." />
    <PropertyGroup>
      <_ChromeVersion>$(_ChromeVersion.Replace(`Google Chrome `, ``))</_ChromeVersion>
      <_ChromeDriverLatestVersionUri>https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$(_ChromeVersion.Split(`.`)[0])</_ChromeDriverLatestVersionUri>
    </PropertyGroup>
    <Message Text="Google Chrome version $(_ChromeVersion) is installed." Importance="normal" />
    <!--
      Download the file containing the latest version of the driver for this major version of Chrome.
      See https://chromedriver.chromium.org/downloads/version-selection.
    -->
    <Message Text="Downloading latest Google Chrome driver version from '$(_ChromeDriverLatestVersionUri)'..." Importance="normal" />
    <DownloadFile SourceUrl="$(_ChromeDriverLatestVersionUri)" DestinationFolder="$(BaseIntermediateOutputPath)" Retries="1">
      <Output TaskParameter="DownloadedFile" PropertyName="_ChromeDriverLatestVersionFile" />
    </DownloadFile>
    <ItemGroup>
      <FileWrites Include="$(_ChromeDriverLatestVersionFile)" />
    </ItemGroup>
    <!--
      Read the latest driver version out of the file.
    -->
    <ReadLinesFromFile File="$(_ChromeDriverLatestVersionFile)">
      <Output TaskParameter="Lines" PropertyName="_ChromeDriverLatestVersion" />
    </ReadLinesFromFile>
    <Message Text="The latest version of the Google Chrome driver is $(_ChromeDriverLatestVersion)." Importance="normal" />
    <PropertyGroup>
      <ChromeDriverVersion>$(_ChromeDriverLatestVersion)00</ChromeDriverVersion>
    </PropertyGroup>
    <!--
      Add the appropriate package reference for the driver for the installed version of Chrome.
    -->
    <ItemGroup>
      <PackageVersion Include="Selenium.WebDriver.ChromeDriver" Version="$(ChromeDriverVersion)" />
      <PackageReference Include="Selenium.WebDriver.ChromeDriver" />
    </ItemGroup>
    <Message Text="Added package reference to Selenium.WebDriver.ChromeDriver version '$(ChromeDriverVersion)'." Importance="normal" />
  </Target>
</Project>
