<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <IsPackable>false</IsPackable>
    <NoWarn>$(NoWarn);CA1707;CA2234</NoWarn>
    <RootNamespace>MartinCostello.AppleFitnessWorkoutMapper</RootNamespace>
    <TargetFramework>net5.0</TargetFramework>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="coverlet.msbuild" PrivateAssets="All" />
    <PackageReference Include="MartinCostello.Logging.XUnit" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.Testing" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" />
    <PackageReference Include="Microsoft.Playwright" />
    <PackageReference Include="Moq" />
    <PackageReference Include="NodaTime.Testing" />
    <PackageReference Include="ReportGenerator" PrivateAssets="All" />
    <PackageReference Include="Shouldly" />
    <PackageReference Include="xunit" />
    <PackageReference Include="xunit.runner.visualstudio" PrivateAssets="all" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\src\AppleFitnessWorkoutMapper\AppleFitnessWorkoutMapper.csproj" />
    <WebApplicationFactoryContentRootAttribute
      Include="AppleFitnessWorkoutMapper"
      AssemblyName="AppleFitnessWorkoutMapper"
      ContentRootPath="$([System.IO.Path]::GetFullPath('$(MSBuildThisFileDirectory)../../src/AppleFitnessWorkoutMapper'))"
      ContentRootTest="AppleFitnessWorkoutMapper.csproj"
      Priority="-1" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="xunit.runner.json" CopyToOutputDirectory="PreserveNewest" />
    <None Update="App_Data\*.gpx;localhost-dev.pfx" CopyToOutputDirectory="PreserveNewest" />
  </ItemGroup>
  <PropertyGroup>
    <CollectCoverage>true</CollectCoverage>
    <CoverletOutput Condition=" '$(OutputPath)' != '' ">$(OutputPath)/</CoverletOutput>
    <CoverletOutputFormat>cobertura,json</CoverletOutputFormat>
    <Exclude>[xunit.*]*</Exclude>
    <ExcludeByAttribute>System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute</ExcludeByAttribute>
    <Threshold>70</Threshold>
  </PropertyGroup>
  <PropertyGroup>
    <_PlaywrightCLIInstalledCommand Condition=" $([MSBuild]::IsOsPlatform('Windows')) ">where playwright</_PlaywrightCLIInstalledCommand>
    <_PlaywrightCLIInstalledCommand Condition=" !$([MSBuild]::IsOsPlatform('Windows')) ">type playwright</_PlaywrightCLIInstalledCommand>
  </PropertyGroup>
  <Target Name="DownloadBrowserDrivers" AfterTargets="Build">
    <Exec Command="$(_PlaywrightCLIInstalledCommand)" ConsoleToMsBuild="true" IgnoreExitCode="true" StandardErrorImportance="Normal" StandardOutputImportance="Normal">
      <Output TaskParameter="ExitCode" PropertyName="_PlaywrightCLIInstalled" />
    </Exec>
    <Warning Condition=" $(_PlaywrightCLIInstalled) != 0 " Text="The Playwright CLI .NET Global Tool is not installed. To install this tool, run the following command: dotnet tool install --global Microsoft.Playwright.CLI" />
    <Exec Condition=" $(_PlaywrightCLIInstalled) == 0 " Command="playwright install" WorkingDirectory="$(MSBuildThisFileDirectory)\..\..\" ConsoleToMsBuild="true" StandardOutputImportance="Normal" />
  </Target>
</Project>
